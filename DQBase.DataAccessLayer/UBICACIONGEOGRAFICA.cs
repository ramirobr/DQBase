//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace DQBase.DataAccessLayer
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(LABORATORIO))]
    [KnownType(typeof(VENTA))]
    [KnownType(typeof(CORPORACION))]
    public partial class UBICACIONGEOGRAFICA: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public System.Guid IDUBICACION
        {
            get { return _iDUBICACION; }
            set
            {
                if (_iDUBICACION != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'IDUBICACION' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iDUBICACION = value;
                    OnPropertyChanged("IDUBICACION");
                }
            }
        }
        private System.Guid _iDUBICACION;
    
        [DataMember]
        public string NOMBREUBICACION
        {
            get { return _nOMBREUBICACION; }
            set
            {
                if (_nOMBREUBICACION != value)
                {
                    _nOMBREUBICACION = value;
                    OnPropertyChanged("NOMBREUBICACION");
                }
            }
        }
        private string _nOMBREUBICACION;
    
        [DataMember]
        public Nullable<System.Guid> IDPADRE
        {
            get { return _iDPADRE; }
            set
            {
                if (_iDPADRE != value)
                {
                    _iDPADRE = value;
                    OnPropertyChanged("IDPADRE");
                }
            }
        }
        private Nullable<System.Guid> _iDPADRE;
    
        [DataMember]
        public string CATEGORIAUBICACION
        {
            get { return _cATEGORIAUBICACION; }
            set
            {
                if (_cATEGORIAUBICACION != value)
                {
                    _cATEGORIAUBICACION = value;
                    OnPropertyChanged("CATEGORIAUBICACION");
                }
            }
        }
        private string _cATEGORIAUBICACION;
    
        [DataMember]
        public Nullable<bool> ESBORRADOUBICACION
        {
            get { return _eSBORRADOUBICACION; }
            set
            {
                if (_eSBORRADOUBICACION != value)
                {
                    _eSBORRADOUBICACION = value;
                    OnPropertyChanged("ESBORRADOUBICACION");
                }
            }
        }
        private Nullable<bool> _eSBORRADOUBICACION;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<LABORATORIO> LABORATORIO
        {
            get
            {
                if (_lABORATORIO == null)
                {
                    _lABORATORIO = new TrackableCollection<LABORATORIO>();
                    _lABORATORIO.CollectionChanged += FixupLABORATORIO;
                }
                return _lABORATORIO;
            }
            set
            {
                if (!ReferenceEquals(_lABORATORIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_lABORATORIO != null)
                    {
                        _lABORATORIO.CollectionChanged -= FixupLABORATORIO;
                    }
                    _lABORATORIO = value;
                    if (_lABORATORIO != null)
                    {
                        _lABORATORIO.CollectionChanged += FixupLABORATORIO;
                    }
                    OnNavigationPropertyChanged("LABORATORIO");
                }
            }
        }
        private TrackableCollection<LABORATORIO> _lABORATORIO;
    
        [DataMember]
        public TrackableCollection<VENTA> VENTA
        {
            get
            {
                if (_vENTA == null)
                {
                    _vENTA = new TrackableCollection<VENTA>();
                    _vENTA.CollectionChanged += FixupVENTA;
                }
                return _vENTA;
            }
            set
            {
                if (!ReferenceEquals(_vENTA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_vENTA != null)
                    {
                        _vENTA.CollectionChanged -= FixupVENTA;
                    }
                    _vENTA = value;
                    if (_vENTA != null)
                    {
                        _vENTA.CollectionChanged += FixupVENTA;
                    }
                    OnNavigationPropertyChanged("VENTA");
                }
            }
        }
        private TrackableCollection<VENTA> _vENTA;
    
        [DataMember]
        public TrackableCollection<CORPORACION> CORPORACION
        {
            get
            {
                if (_cORPORACION == null)
                {
                    _cORPORACION = new TrackableCollection<CORPORACION>();
                    _cORPORACION.CollectionChanged += FixupCORPORACION;
                }
                return _cORPORACION;
            }
            set
            {
                if (!ReferenceEquals(_cORPORACION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cORPORACION != null)
                    {
                        _cORPORACION.CollectionChanged -= FixupCORPORACION;
                    }
                    _cORPORACION = value;
                    if (_cORPORACION != null)
                    {
                        _cORPORACION.CollectionChanged += FixupCORPORACION;
                    }
                    OnNavigationPropertyChanged("CORPORACION");
                }
            }
        }
        private TrackableCollection<CORPORACION> _cORPORACION;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            LABORATORIO.Clear();
            VENTA.Clear();
            CORPORACION.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupLABORATORIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LABORATORIO item in e.NewItems)
                {
                    item.UBICACIONGEOGRAFICA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LABORATORIO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LABORATORIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.UBICACIONGEOGRAFICA, this))
                    {
                        item.UBICACIONGEOGRAFICA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LABORATORIO", item);
                    }
                }
            }
        }
    
        private void FixupVENTA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (VENTA item in e.NewItems)
                {
                    item.UBICACIONGEOGRAFICA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("VENTA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (VENTA item in e.OldItems)
                {
                    if (ReferenceEquals(item.UBICACIONGEOGRAFICA, this))
                    {
                        item.UBICACIONGEOGRAFICA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("VENTA", item);
                    }
                }
            }
        }
    
        private void FixupCORPORACION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CORPORACION item in e.NewItems)
                {
                    item.UBICACIONGEOGRAFICA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CORPORACION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CORPORACION item in e.OldItems)
                {
                    if (ReferenceEquals(item.UBICACIONGEOGRAFICA, this))
                    {
                        item.UBICACIONGEOGRAFICA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CORPORACION", item);
                    }
                }
            }
        }

        #endregion
    }
}
