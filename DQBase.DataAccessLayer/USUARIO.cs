//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace DQBase.DataAccessLayer
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CONSULTA))]
    [KnownType(typeof(HISTORIALUSUARIO))]
    [KnownType(typeof(LABORATORIO))]
    [KnownType(typeof(ROLUSUARIO))]
    [KnownType(typeof(VENTA))]
    public partial class USUARIO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public System.Guid IDUSUARIO
        {
            get { return _iDUSUARIO; }
            set
            {
                if (_iDUSUARIO != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'IDUSUARIO' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iDUSUARIO = value;
                    OnPropertyChanged("IDUSUARIO");
                }
            }
        }
        private System.Guid _iDUSUARIO;
    
        [DataMember]
        public Nullable<System.Guid> IDLABORATORIO
        {
            get { return _iDLABORATORIO; }
            set
            {
                if (_iDLABORATORIO != value)
                {
                    ChangeTracker.RecordOriginalValue("IDLABORATORIO", _iDLABORATORIO);
                    if (!IsDeserializing)
                    {
                        if (LABORATORIO != null && LABORATORIO.IDLABORATORIO != value)
                        {
                            LABORATORIO = null;
                        }
                    }
                    _iDLABORATORIO = value;
                    OnPropertyChanged("IDLABORATORIO");
                }
            }
        }
        private Nullable<System.Guid> _iDLABORATORIO;
    
        [DataMember]
        public string NOMBRECOMPLETO
        {
            get { return _nOMBRECOMPLETO; }
            set
            {
                if (_nOMBRECOMPLETO != value)
                {
                    _nOMBRECOMPLETO = value;
                    OnPropertyChanged("NOMBRECOMPLETO");
                }
            }
        }
        private string _nOMBRECOMPLETO;
    
        [DataMember]
        public string USUARIO1
        {
            get { return _uSUARIO1; }
            set
            {
                if (_uSUARIO1 != value)
                {
                    _uSUARIO1 = value;
                    OnPropertyChanged("USUARIO1");
                }
            }
        }
        private string _uSUARIO1;
    
        [DataMember]
        public string CLAVE
        {
            get { return _cLAVE; }
            set
            {
                if (_cLAVE != value)
                {
                    _cLAVE = value;
                    OnPropertyChanged("CLAVE");
                }
            }
        }
        private string _cLAVE;
    
        [DataMember]
        public bool ESBORRADOUSUARIO
        {
            get { return _eSBORRADOUSUARIO; }
            set
            {
                if (_eSBORRADOUSUARIO != value)
                {
                    _eSBORRADOUSUARIO = value;
                    OnPropertyChanged("ESBORRADOUSUARIO");
                }
            }
        }
        private bool _eSBORRADOUSUARIO;
    
        [DataMember]
        public Nullable<System.DateTime> FechaCreacion
        {
            get { return _fechaCreacion; }
            set
            {
                if (_fechaCreacion != value)
                {
                    _fechaCreacion = value;
                    OnPropertyChanged("FechaCreacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaCreacion;
    
        [DataMember]
        public Nullable<System.DateTime> FechaCaducidad
        {
            get { return _fechaCaducidad; }
            set
            {
                if (_fechaCaducidad != value)
                {
                    _fechaCaducidad = value;
                    OnPropertyChanged("FechaCaducidad");
                }
            }
        }
        private Nullable<System.DateTime> _fechaCaducidad;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<CONSULTA> CONSULTA
        {
            get
            {
                if (_cONSULTA == null)
                {
                    _cONSULTA = new TrackableCollection<CONSULTA>();
                    _cONSULTA.CollectionChanged += FixupCONSULTA;
                }
                return _cONSULTA;
            }
            set
            {
                if (!ReferenceEquals(_cONSULTA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cONSULTA != null)
                    {
                        _cONSULTA.CollectionChanged -= FixupCONSULTA;
                    }
                    _cONSULTA = value;
                    if (_cONSULTA != null)
                    {
                        _cONSULTA.CollectionChanged += FixupCONSULTA;
                    }
                    OnNavigationPropertyChanged("CONSULTA");
                }
            }
        }
        private TrackableCollection<CONSULTA> _cONSULTA;
    
        [DataMember]
        public TrackableCollection<HISTORIALUSUARIO> HISTORIALUSUARIO
        {
            get
            {
                if (_hISTORIALUSUARIO == null)
                {
                    _hISTORIALUSUARIO = new TrackableCollection<HISTORIALUSUARIO>();
                    _hISTORIALUSUARIO.CollectionChanged += FixupHISTORIALUSUARIO;
                }
                return _hISTORIALUSUARIO;
            }
            set
            {
                if (!ReferenceEquals(_hISTORIALUSUARIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_hISTORIALUSUARIO != null)
                    {
                        _hISTORIALUSUARIO.CollectionChanged -= FixupHISTORIALUSUARIO;
                    }
                    _hISTORIALUSUARIO = value;
                    if (_hISTORIALUSUARIO != null)
                    {
                        _hISTORIALUSUARIO.CollectionChanged += FixupHISTORIALUSUARIO;
                    }
                    OnNavigationPropertyChanged("HISTORIALUSUARIO");
                }
            }
        }
        private TrackableCollection<HISTORIALUSUARIO> _hISTORIALUSUARIO;
    
        [DataMember]
        public LABORATORIO LABORATORIO
        {
            get { return _lABORATORIO; }
            set
            {
                if (!ReferenceEquals(_lABORATORIO, value))
                {
                    var previousValue = _lABORATORIO;
                    _lABORATORIO = value;
                    FixupLABORATORIO(previousValue);
                    OnNavigationPropertyChanged("LABORATORIO");
                }
            }
        }
        private LABORATORIO _lABORATORIO;
    
        [DataMember]
        public TrackableCollection<ROLUSUARIO> ROLUSUARIO
        {
            get
            {
                if (_rOLUSUARIO == null)
                {
                    _rOLUSUARIO = new TrackableCollection<ROLUSUARIO>();
                    _rOLUSUARIO.CollectionChanged += FixupROLUSUARIO;
                }
                return _rOLUSUARIO;
            }
            set
            {
                if (!ReferenceEquals(_rOLUSUARIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rOLUSUARIO != null)
                    {
                        _rOLUSUARIO.CollectionChanged -= FixupROLUSUARIO;
                    }
                    _rOLUSUARIO = value;
                    if (_rOLUSUARIO != null)
                    {
                        _rOLUSUARIO.CollectionChanged += FixupROLUSUARIO;
                    }
                    OnNavigationPropertyChanged("ROLUSUARIO");
                }
            }
        }
        private TrackableCollection<ROLUSUARIO> _rOLUSUARIO;
    
        [DataMember]
        public TrackableCollection<VENTA> VENTA
        {
            get
            {
                if (_vENTA == null)
                {
                    _vENTA = new TrackableCollection<VENTA>();
                    _vENTA.CollectionChanged += FixupVENTA;
                }
                return _vENTA;
            }
            set
            {
                if (!ReferenceEquals(_vENTA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_vENTA != null)
                    {
                        _vENTA.CollectionChanged -= FixupVENTA;
                    }
                    _vENTA = value;
                    if (_vENTA != null)
                    {
                        _vENTA.CollectionChanged += FixupVENTA;
                    }
                    OnNavigationPropertyChanged("VENTA");
                }
            }
        }
        private TrackableCollection<VENTA> _vENTA;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            CONSULTA.Clear();
            HISTORIALUSUARIO.Clear();
            LABORATORIO = null;
            ROLUSUARIO.Clear();
            VENTA.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupLABORATORIO(LABORATORIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.USUARIO.Contains(this))
            {
                previousValue.USUARIO.Remove(this);
            }
    
            if (LABORATORIO != null)
            {
                if (!LABORATORIO.USUARIO.Contains(this))
                {
                    LABORATORIO.USUARIO.Add(this);
                }
    
                IDLABORATORIO = LABORATORIO.IDLABORATORIO;
            }
            else if (!skipKeys)
            {
                IDLABORATORIO = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("LABORATORIO")
                    && (ChangeTracker.OriginalValues["LABORATORIO"] == LABORATORIO))
                {
                    ChangeTracker.OriginalValues.Remove("LABORATORIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("LABORATORIO", previousValue);
                }
                if (LABORATORIO != null && !LABORATORIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    LABORATORIO.StartTracking();
                }
            }
        }
    
        private void FixupCONSULTA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CONSULTA item in e.NewItems)
                {
                    item.USUARIO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CONSULTA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CONSULTA item in e.OldItems)
                {
                    if (ReferenceEquals(item.USUARIO, this))
                    {
                        item.USUARIO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CONSULTA", item);
                    }
                }
            }
        }
    
        private void FixupHISTORIALUSUARIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (HISTORIALUSUARIO item in e.NewItems)
                {
                    item.USUARIO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("HISTORIALUSUARIO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (HISTORIALUSUARIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.USUARIO, this))
                    {
                        item.USUARIO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("HISTORIALUSUARIO", item);
                    }
                }
            }
        }
    
        private void FixupROLUSUARIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ROLUSUARIO item in e.NewItems)
                {
                    item.USUARIO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ROLUSUARIO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ROLUSUARIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.USUARIO, this))
                    {
                        item.USUARIO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ROLUSUARIO", item);
                    }
                }
            }
        }
    
        private void FixupVENTA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (VENTA item in e.NewItems)
                {
                    item.USUARIO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("VENTA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (VENTA item in e.OldItems)
                {
                    if (ReferenceEquals(item.USUARIO, this))
                    {
                        item.USUARIO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("VENTA", item);
                    }
                }
            }
        }

        #endregion
    }
}
